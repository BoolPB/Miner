<?xml version="1.0" encoding="utf-8"?>
<project title="Miner" version="2.2.0&#10;">
  <partials/>
  <file path="Miner.php" generated-path="Miner.html" hash="7f0b66774ccef9e045af0b1e43957c7c" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
    </docblock>
    <class final="false" abstract="false" namespace="" line="13" package="Miner">
      <extends/>
      <name>Miner</name>
      <full_name>\Miner</full_name>
      <docblock line="13">
        <description>A dead simple PHP class for building SQL statements. No manual string
concatenation necessary.</description>
        <long-description></long-description>
        <tag name="author" line="13" description="Justin Stayton"/>
        <tag name="copyright" line="13" description="Copyright 2013 by Justin Stayton"/>
        <tag name="license" line="13" description="MIT" link="https://github.com/jstayton/Miner/blob/master/LICENSE-MIT"/>
        <tag name="package" line="13" description="Miner"/>
        <tag name="version" line="13" description="0.9.4"/>
      </docblock>
      <constant namespace="" line="18" package="Miner">
        <name>INNER_JOIN</name>
        <full_name>\Miner::INNER_JOIN</full_name>
        <value>"INNER JOIN"</value>
        <docblock line="18">
          <description>INNER JOIN type.</description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="23" package="Miner">
        <name>LEFT_JOIN</name>
        <full_name>\Miner::LEFT_JOIN</full_name>
        <value>"LEFT JOIN"</value>
        <docblock line="23">
          <description>LEFT JOIN type.</description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="28" package="Miner">
        <name>RIGHT_JOIN</name>
        <full_name>\Miner::RIGHT_JOIN</full_name>
        <value>"RIGHT JOIN"</value>
        <docblock line="28">
          <description>RIGHT JOIN type.</description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="33" package="Miner">
        <name>LOGICAL_AND</name>
        <full_name>\Miner::LOGICAL_AND</full_name>
        <value>"AND"</value>
        <docblock line="33">
          <description>AND logical operator.</description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="38" package="Miner">
        <name>LOGICAL_OR</name>
        <full_name>\Miner::LOGICAL_OR</full_name>
        <value>"OR"</value>
        <docblock line="38">
          <description>OR logical operator.</description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="43" package="Miner">
        <name>EQUALS</name>
        <full_name>\Miner::EQUALS</full_name>
        <value>"="</value>
        <docblock line="43">
          <description>Equals comparison operator.</description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="48" package="Miner">
        <name>NOT_EQUALS</name>
        <full_name>\Miner::NOT_EQUALS</full_name>
        <value>"!="</value>
        <docblock line="48">
          <description>Not equals comparison operator.</description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="53" package="Miner">
        <name>LESS_THAN</name>
        <full_name>\Miner::LESS_THAN</full_name>
        <value>"&lt;"</value>
        <docblock line="53">
          <description>Less than comparison operator.</description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="58" package="Miner">
        <name>LESS_THAN_OR_EQUAL</name>
        <full_name>\Miner::LESS_THAN_OR_EQUAL</full_name>
        <value>"&lt;="</value>
        <docblock line="58">
          <description>Less than or equal to comparison operator.</description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="63" package="Miner">
        <name>GREATER_THAN</name>
        <full_name>\Miner::GREATER_THAN</full_name>
        <value>"&gt;"</value>
        <docblock line="63">
          <description>Greater than comparison operator.</description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="68" package="Miner">
        <name>GREATER_THAN_OR_EQUAL</name>
        <full_name>\Miner::GREATER_THAN_OR_EQUAL</full_name>
        <value>"&gt;="</value>
        <docblock line="68">
          <description>Greater than or equal to comparison operator.</description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="73" package="Miner">
        <name>IN</name>
        <full_name>\Miner::IN</full_name>
        <value>"IN"</value>
        <docblock line="73">
          <description>IN comparison operator.</description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="78" package="Miner">
        <name>NOT_IN</name>
        <full_name>\Miner::NOT_IN</full_name>
        <value>"NOT IN"</value>
        <docblock line="78">
          <description>NOT IN comparison operator.</description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="83" package="Miner">
        <name>LIKE</name>
        <full_name>\Miner::LIKE</full_name>
        <value>"LIKE"</value>
        <docblock line="83">
          <description>LIKE comparison operator.</description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="88" package="Miner">
        <name>NOT_LIKE</name>
        <full_name>\Miner::NOT_LIKE</full_name>
        <value>"NOT LIKE"</value>
        <docblock line="88">
          <description>NOT LIKE comparison operator.</description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="93" package="Miner">
        <name>ILIKE</name>
        <full_name>\Miner::ILIKE</full_name>
        <value>"ILIKE"</value>
        <docblock line="93">
          <description>ILIKE comparison operator.</description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="98" package="Miner">
        <name>REGEX</name>
        <full_name>\Miner::REGEX</full_name>
        <value>"REGEXP"</value>
        <docblock line="98">
          <description>REGEXP comparison operator.</description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="103" package="Miner">
        <name>NOT_REGEX</name>
        <full_name>\Miner::NOT_REGEX</full_name>
        <value>"NOT REGEXP"</value>
        <docblock line="103">
          <description>NOT REGEXP comparison operator.</description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="108" package="Miner">
        <name>BETWEEN</name>
        <full_name>\Miner::BETWEEN</full_name>
        <value>"BETWEEN"</value>
        <docblock line="108">
          <description>BETWEEN comparison operator.</description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="113" package="Miner">
        <name>NOT_BETWEEN</name>
        <full_name>\Miner::NOT_BETWEEN</full_name>
        <value>"NOT BETWEEN"</value>
        <docblock line="113">
          <description>NOT BETWEEN comparison operator.</description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="118" package="Miner">
        <name>IS</name>
        <full_name>\Miner::IS</full_name>
        <value>"IS"</value>
        <docblock line="118">
          <description>IS comparison operator.</description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="123" package="Miner">
        <name>IS_NOT</name>
        <full_name>\Miner::IS_NOT</full_name>
        <value>"IS NOT"</value>
        <docblock line="123">
          <description>IS NOT comparison operator.</description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="128" package="Miner">
        <name>ORDER_BY_ASC</name>
        <full_name>\Miner::ORDER_BY_ASC</full_name>
        <value>"ASC"</value>
        <docblock line="128">
          <description>Ascending ORDER BY direction.</description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="133" package="Miner">
        <name>ORDER_BY_DESC</name>
        <full_name>\Miner::ORDER_BY_DESC</full_name>
        <value>"DESC"</value>
        <docblock line="133">
          <description>Descending ORDER BY direction.</description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="138" package="Miner">
        <name>BRACKET_OPEN</name>
        <full_name>\Miner::BRACKET_OPEN</full_name>
        <value>"("</value>
        <docblock line="138">
          <description>Open bracket for grouping criteria.</description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="" line="143" package="Miner">
        <name>BRACKET_CLOSE</name>
        <full_name>\Miner::BRACKET_CLOSE</full_name>
        <value>")"</value>
        <docblock line="143">
          <description>Closing bracket for grouping criteria.</description>
          <long-description></long-description>
        </docblock>
      </constant>
      <property static="false" visibility="private" line="150" namespace="" package="Miner">
        <name>$PdoConnection</name>
        <default></default>
        <docblock line="150">
          <description>PDO database connection to use in executing the statement.</description>
          <long-description></long-description>
          <tag name="var" line="150" description="" type="\PDO|null" variable="">
            <type link="PDO.html">\PDO</type>
            <type>null</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" line="157" namespace="" package="Miner">
        <name>$autoQuote</name>
        <default></default>
        <docblock line="157">
          <description>Whether to automatically escape values.</description>
          <long-description></long-description>
          <tag name="var" line="157" description="" type="bool|null" variable="">
            <type>bool</type>
            <type>null</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" line="164" namespace="" package="Miner">
        <name>$option</name>
        <default></default>
        <docblock line="164">
          <description>Execution options like DISTINCT and SQL_CALC_FOUND_ROWS.</description>
          <long-description></long-description>
          <tag name="var" line="164" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" line="171" namespace="" package="Miner">
        <name>$select</name>
        <default></default>
        <docblock line="171">
          <description>Columns, tables, and expressions to SELECT from.</description>
          <long-description></long-description>
          <tag name="var" line="171" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" line="178" namespace="" package="Miner">
        <name>$insert</name>
        <default></default>
        <docblock line="178">
          <description>Table to INSERT into.</description>
          <long-description></long-description>
          <tag name="var" line="178" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" line="185" namespace="" package="Miner">
        <name>$replace</name>
        <default></default>
        <docblock line="185">
          <description>Table to REPLACE into.</description>
          <long-description></long-description>
          <tag name="var" line="185" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" line="192" namespace="" package="Miner">
        <name>$update</name>
        <default></default>
        <docblock line="192">
          <description>Table to UPDATE.</description>
          <long-description></long-description>
          <tag name="var" line="192" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" line="199" namespace="" package="Miner">
        <name>$delete</name>
        <default></default>
        <docblock line="199">
          <description>Tables to DELETE from, or true if deleting from the FROM table.</description>
          <long-description></long-description>
          <tag name="var" line="199" description="" type="array|true" variable="">
            <type>array</type>
            <type>true</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" line="206" namespace="" package="Miner">
        <name>$set</name>
        <default></default>
        <docblock line="206">
          <description>Column values to INSERT or UPDATE.</description>
          <long-description></long-description>
          <tag name="var" line="206" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" line="213" namespace="" package="Miner">
        <name>$from</name>
        <default></default>
        <docblock line="213">
          <description>Table to select FROM.</description>
          <long-description></long-description>
          <tag name="var" line="213" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" line="220" namespace="" package="Miner">
        <name>$join</name>
        <default></default>
        <docblock line="220">
          <description>JOIN tables and ON criteria.</description>
          <long-description></long-description>
          <tag name="var" line="220" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" line="227" namespace="" package="Miner">
        <name>$where</name>
        <default></default>
        <docblock line="227">
          <description>WHERE criteria.</description>
          <long-description></long-description>
          <tag name="var" line="227" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" line="234" namespace="" package="Miner">
        <name>$groupBy</name>
        <default></default>
        <docblock line="234">
          <description>Columns to GROUP BY.</description>
          <long-description></long-description>
          <tag name="var" line="234" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" line="241" namespace="" package="Miner">
        <name>$having</name>
        <default></default>
        <docblock line="241">
          <description>HAVING criteria.</description>
          <long-description></long-description>
          <tag name="var" line="241" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" line="248" namespace="" package="Miner">
        <name>$orderBy</name>
        <default></default>
        <docblock line="248">
          <description>Columns to ORDER BY.</description>
          <long-description></long-description>
          <tag name="var" line="248" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" line="255" namespace="" package="Miner">
        <name>$limit</name>
        <default></default>
        <docblock line="255">
          <description>Number of rows to return from offset.</description>
          <long-description></long-description>
          <tag name="var" line="255" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" line="262" namespace="" package="Miner">
        <name>$setPlaceholderValues</name>
        <default></default>
        <docblock line="262">
          <description>SET placeholder values.</description>
          <long-description></long-description>
          <tag name="var" line="262" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" line="269" namespace="" package="Miner">
        <name>$wherePlaceholderValues</name>
        <default></default>
        <docblock line="269">
          <description>WHERE placeholder values.</description>
          <long-description></long-description>
          <tag name="var" line="269" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" line="276" namespace="" package="Miner">
        <name>$havingPlaceholderValues</name>
        <default></default>
        <docblock line="276">
          <description>HAVING placeholder values.</description>
          <long-description></long-description>
          <tag name="var" line="276" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="285" package="Miner">
        <name>__construct</name>
        <full_name>\Miner::__construct()</full_name>
        <docblock line="285">
          <description>Constructor.</description>
          <long-description></long-description>
          <tag name="param" line="285" description="&lt;p&gt;optional PDO database connection&lt;/p&gt;" type="\PDO|null" variable="$PdoConnection">
            <type link="PDO.html">\PDO</type>
            <type>null</type>
          </tag>
          <tag name="param" line="285" description="&lt;p&gt;optional auto-escape values, default true&lt;/p&gt;" type="bool" variable="$autoQuote">
            <type>bool</type>
          </tag>
          <tag name="return" line="285" description="" type="\Miner">
            <type link="Miner.html">\Miner</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$PdoConnection</name>
          <default>null</default>
          <type>\PDO|null</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$autoQuote</name>
          <default>true</default>
          <type>bool</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="312" package="Miner">
        <name>setPdoConnection</name>
        <full_name>\Miner::setPdoConnection()</full_name>
        <docblock line="312">
          <description>Set the PDO database connection to use in executing this statement.</description>
          <long-description></long-description>
          <tag name="param" line="312" description="&lt;p&gt;optional PDO database connection&lt;/p&gt;" type="\PDO|null" variable="$PdoConnection">
            <type link="PDO.html">\PDO</type>
            <type>null</type>
          </tag>
          <tag name="return" line="312" description="" type="\Miner">
            <type link="Miner.html">\Miner</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$PdoConnection</name>
          <default>null</default>
          <type>\PDO|null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="323" package="Miner">
        <name>getPdoConnection</name>
        <full_name>\Miner::getPdoConnection()</full_name>
        <docblock line="323">
          <description>Get the PDO database connection to use in executing this statement.</description>
          <long-description></long-description>
          <tag name="return" line="323" description="" type="\PDO|null">
            <type link="PDO.html">\PDO</type>
            <type>null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="333" package="Miner">
        <name>setAutoQuote</name>
        <full_name>\Miner::setAutoQuote()</full_name>
        <docblock line="333">
          <description>Set whether to automatically escape values.</description>
          <long-description></long-description>
          <tag name="param" line="333" description="&lt;p&gt;whether to automatically escape values&lt;/p&gt;" type="bool|null" variable="$autoQuote">
            <type>bool</type>
            <type>null</type>
          </tag>
          <tag name="return" line="333" description="" type="\Miner">
            <type link="Miner.html">\Miner</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$autoQuote</name>
          <default></default>
          <type>bool|null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="349" package="Miner">
        <name>getAutoQuote</name>
        <full_name>\Miner::getAutoQuote()</full_name>
        <docblock line="349">
          <description>Get whether values will be automatically escaped.</description>
          <long-description>The $override parameter is for convenience in checking if a specific
value should be quoted differently than the rest. 'null' defers to the
global setting.</long-description>
          <tag name="param" line="349" description="&lt;p&gt;value-specific override for convenience&lt;/p&gt;" type="bool|null" variable="$override">
            <type>bool</type>
            <type>null</type>
          </tag>
          <tag name="return" line="349" description="" type="bool">
            <type>bool</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$override</name>
          <default>null</default>
          <type>bool|null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="365" package="Miner">
        <name>autoQuote</name>
        <full_name>\Miner::autoQuote()</full_name>
        <docblock line="365">
          <description>Safely escape a value if auto-quoting is enabled, or do nothing if
disabled.</description>
          <long-description>The $override parameter is for convenience in checking if a specific
value should be quoted differently than the rest. 'null' defers to the
global setting.</long-description>
          <tag name="param" line="365" description="&lt;p&gt;value to escape (or not)&lt;/p&gt;" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="param" line="365" description="&lt;p&gt;value-specific override for convenience&lt;/p&gt;" type="bool|null" variable="$override">
            <type>bool</type>
            <type>null</type>
          </tag>
          <tag name="return" line="365" description="value (escaped or original) or false if failed" type="mixed|false">
            <type>mixed</type>
            <type>false</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$override</name>
          <default>null</default>
          <type>bool|null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="375" package="Miner">
        <name>quote</name>
        <full_name>\Miner::quote()</full_name>
        <docblock line="375">
          <description>Safely escape a value for use in a statement.</description>
          <long-description></long-description>
          <tag name="param" line="375" description="&lt;p&gt;value to escape&lt;/p&gt;" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="return" line="375" description="escaped value or false if failed" type="mixed|false">
            <type>mixed</type>
            <type>false</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="400" package="Miner">
        <name>option</name>
        <full_name>\Miner::option()</full_name>
        <docblock line="400">
          <description>Add an execution option like DISTINCT or SQL_CALC_FOUND_ROWS.</description>
          <long-description></long-description>
          <tag name="param" line="400" description="&lt;p&gt;execution option to add&lt;/p&gt;" type="string" variable="$option">
            <type>string</type>
          </tag>
          <tag name="return" line="400" description="" type="\Miner">
            <type link="Miner.html">\Miner</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$option</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="412" package="Miner">
        <name>getOptionsString</name>
        <full_name>\Miner::getOptionsString()</full_name>
        <docblock line="412">
          <description>Get the execution options portion of the statement as a string.</description>
          <long-description></long-description>
          <tag name="param" line="412" description="&lt;p&gt;optional include space after options&lt;/p&gt;" type="bool" variable="$includeTrailingSpace">
            <type>bool</type>
          </tag>
          <tag name="return" line="412" description="execution options portion of the statement" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$includeTrailingSpace</name>
          <default>false</default>
          <type>bool</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="434" package="Miner">
        <name>mergeOptionsInto</name>
        <full_name>\Miner::mergeOptionsInto()</full_name>
        <docblock line="434">
          <description>Merge this Miner's execution options into the given Miner.</description>
          <long-description></long-description>
          <tag name="param" line="434" description="&lt;p&gt;to merge into&lt;/p&gt;" type="\Miner" variable="$Miner">
            <type link="Miner.html">\Miner</type>
          </tag>
          <tag name="return" line="434" description="" type="\Miner">
            <type link="Miner.html">\Miner</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$Miner</name>
          <default></default>
          <type>\Miner</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="447" package="Miner">
        <name>calcFoundRows</name>
        <full_name>\Miner::calcFoundRows()</full_name>
        <docblock line="447">
          <description>Add SQL_CALC_FOUND_ROWS execution option.</description>
          <long-description></long-description>
          <tag name="return" line="447" description="" type="\Miner">
            <type link="Miner.html">\Miner</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="456" package="Miner">
        <name>distinct</name>
        <full_name>\Miner::distinct()</full_name>
        <docblock line="456">
          <description>Add DISTINCT execution option.</description>
          <long-description></long-description>
          <tag name="return" line="456" description="" type="\Miner">
            <type link="Miner.html">\Miner</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="467" package="Miner">
        <name>select</name>
        <full_name>\Miner::select()</full_name>
        <docblock line="467">
          <description>Add a SELECT column, table, or expression with optional alias.</description>
          <long-description></long-description>
          <tag name="param" line="467" description="&lt;p&gt;column name, table name, or expression&lt;/p&gt;" type="string" variable="$column">
            <type>string</type>
          </tag>
          <tag name="param" line="467" description="&lt;p&gt;optional alias&lt;/p&gt;" type="string" variable="$alias">
            <type>string</type>
          </tag>
          <tag name="return" line="467" description="" type="\Miner">
            <type link="Miner.html">\Miner</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$column</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$alias</name>
          <default>null</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="479" package="Miner">
        <name>mergeSelectInto</name>
        <full_name>\Miner::mergeSelectInto()</full_name>
        <docblock line="479">
          <description>Merge this Miner's SELECT into the given Miner.</description>
          <long-description></long-description>
          <tag name="param" line="479" description="&lt;p&gt;to merge into&lt;/p&gt;" type="\Miner" variable="$Miner">
            <type link="Miner.html">\Miner</type>
          </tag>
          <tag name="return" line="479" description="" type="\Miner">
            <type link="Miner.html">\Miner</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$Miner</name>
          <default></default>
          <type>\Miner</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="495" package="Miner">
        <name>getSelectString</name>
        <full_name>\Miner::getSelectString()</full_name>
        <docblock line="495">
          <description>Get the SELECT portion of the statement as a string.</description>
          <long-description></long-description>
          <tag name="param" line="495" description="&lt;p&gt;optional include 'SELECT' text, default true&lt;/p&gt;" type="bool" variable="$includeText">
            <type>bool</type>
          </tag>
          <tag name="return" line="495" description="SELECT portion of the statement" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$includeText</name>
          <default>true</default>
          <type>bool</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="529" package="Miner">
        <name>insert</name>
        <full_name>\Miner::insert()</full_name>
        <docblock line="529">
          <description>Set the INSERT table.</description>
          <long-description></long-description>
          <tag name="param" line="529" description="&lt;p&gt;INSERT table&lt;/p&gt;" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="return" line="529" description="" type="\Miner">
            <type link="Miner.html">\Miner</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="541" package="Miner">
        <name>mergeInsertInto</name>
        <full_name>\Miner::mergeInsertInto()</full_name>
        <docblock line="541">
          <description>Merge this Miner's INSERT into the given Miner.</description>
          <long-description></long-description>
          <tag name="param" line="541" description="&lt;p&gt;to merge into&lt;/p&gt;" type="\Miner" variable="$Miner">
            <type link="Miner.html">\Miner</type>
          </tag>
          <tag name="return" line="541" description="" type="\Miner">
            <type link="Miner.html">\Miner</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$Miner</name>
          <default></default>
          <type>\Miner</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="556" package="Miner">
        <name>getInsert</name>
        <full_name>\Miner::getInsert()</full_name>
        <docblock line="556">
          <description>Get the INSERT table.</description>
          <long-description></long-description>
          <tag name="return" line="556" description="INSERT table" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="566" package="Miner">
        <name>getInsertString</name>
        <full_name>\Miner::getInsertString()</full_name>
        <docblock line="566">
          <description>Get the INSERT portion of the statement as a string.</description>
          <long-description></long-description>
          <tag name="param" line="566" description="&lt;p&gt;optional include 'INSERT' text, default true&lt;/p&gt;" type="bool" variable="$includeText">
            <type>bool</type>
          </tag>
          <tag name="return" line="566" description="INSERT portion of the statement" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$includeText</name>
          <default>true</default>
          <type>bool</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="590" package="Miner">
        <name>replace</name>
        <full_name>\Miner::replace()</full_name>
        <docblock line="590">
          <description>Set the REPLACE table.</description>
          <long-description></long-description>
          <tag name="param" line="590" description="&lt;p&gt;REPLACE table&lt;/p&gt;" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="return" line="590" description="" type="\Miner">
            <type link="Miner.html">\Miner</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="602" package="Miner">
        <name>mergeReplaceInto</name>
        <full_name>\Miner::mergeReplaceInto()</full_name>
        <docblock line="602">
          <description>Merge this Miner's REPLACE into the given Miner.</description>
          <long-description></long-description>
          <tag name="param" line="602" description="&lt;p&gt;to merge into&lt;/p&gt;" type="\Miner" variable="$Miner">
            <type link="Miner.html">\Miner</type>
          </tag>
          <tag name="return" line="602" description="" type="\Miner">
            <type link="Miner.html">\Miner</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$Miner</name>
          <default></default>
          <type>\Miner</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="617" package="Miner">
        <name>getReplace</name>
        <full_name>\Miner::getReplace()</full_name>
        <docblock line="617">
          <description>Get the REPLACE table.</description>
          <long-description></long-description>
          <tag name="return" line="617" description="REPLACE table" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="627" package="Miner">
        <name>getReplaceString</name>
        <full_name>\Miner::getReplaceString()</full_name>
        <docblock line="627">
          <description>Get the REPLACE portion of the statement as a string.</description>
          <long-description></long-description>
          <tag name="param" line="627" description="&lt;p&gt;optional include 'REPLACE' text, default true&lt;/p&gt;" type="bool" variable="$includeText">
            <type>bool</type>
          </tag>
          <tag name="return" line="627" description="REPLACE portion of the statement" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$includeText</name>
          <default>true</default>
          <type>bool</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="651" package="Miner">
        <name>update</name>
        <full_name>\Miner::update()</full_name>
        <docblock line="651">
          <description>Set the UPDATE table.</description>
          <long-description></long-description>
          <tag name="param" line="651" description="&lt;p&gt;UPDATE table&lt;/p&gt;" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="return" line="651" description="" type="\Miner">
            <type link="Miner.html">\Miner</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="663" package="Miner">
        <name>mergeUpdateInto</name>
        <full_name>\Miner::mergeUpdateInto()</full_name>
        <docblock line="663">
          <description>Merge this Miner's UPDATE into the given Miner.</description>
          <long-description></long-description>
          <tag name="param" line="663" description="&lt;p&gt;to merge into&lt;/p&gt;" type="\Miner" variable="$Miner">
            <type link="Miner.html">\Miner</type>
          </tag>
          <tag name="return" line="663" description="" type="\Miner">
            <type link="Miner.html">\Miner</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$Miner</name>
          <default></default>
          <type>\Miner</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="678" package="Miner">
        <name>getUpdate</name>
        <full_name>\Miner::getUpdate()</full_name>
        <docblock line="678">
          <description>Get the UPDATE table.</description>
          <long-description></long-description>
          <tag name="return" line="678" description="UPDATE table" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="688" package="Miner">
        <name>getUpdateString</name>
        <full_name>\Miner::getUpdateString()</full_name>
        <docblock line="688">
          <description>Get the UPDATE portion of the statement as a string.</description>
          <long-description></long-description>
          <tag name="param" line="688" description="&lt;p&gt;optional include 'UPDATE' text, default true&lt;/p&gt;" type="bool" variable="$includeText">
            <type>bool</type>
          </tag>
          <tag name="return" line="688" description="UPDATE portion of the statement" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$includeText</name>
          <default>true</default>
          <type>bool</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="717" package="Miner">
        <name>delete</name>
        <full_name>\Miner::delete()</full_name>
        <docblock line="717">
          <description>Add a table to DELETE from, or false if deleting from the FROM table.</description>
          <long-description></long-description>
          <tag name="param" line="717" description="&lt;p&gt;optional table name, default false&lt;/p&gt;" type="string|false" variable="$table">
            <type>string</type>
            <type>false</type>
          </tag>
          <tag name="return" line="717" description="" type="\Miner">
            <type link="Miner.html">\Miner</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default>false</default>
          <type>string|false</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="740" package="Miner">
        <name>mergeDeleteInto</name>
        <full_name>\Miner::mergeDeleteInto()</full_name>
        <docblock line="740">
          <description>Merge this Miner's DELETE into the given Miner.</description>
          <long-description></long-description>
          <tag name="param" line="740" description="&lt;p&gt;to merge into&lt;/p&gt;" type="\Miner" variable="$Miner">
            <type link="Miner.html">\Miner</type>
          </tag>
          <tag name="return" line="740" description="" type="\Miner">
            <type link="Miner.html">\Miner</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$Miner</name>
          <default></default>
          <type>\Miner</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="761" package="Miner">
        <name>getDeleteString</name>
        <full_name>\Miner::getDeleteString()</full_name>
        <docblock line="761">
          <description>Get the DELETE portion of the statement as a string.</description>
          <long-description></long-description>
          <tag name="param" line="761" description="&lt;p&gt;optional include 'DELETE' text, default true&lt;/p&gt;" type="bool" variable="$includeText">
            <type>bool</type>
          </tag>
          <tag name="return" line="761" description="DELETE portion of the statement" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$includeText</name>
          <default>true</default>
          <type>bool</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="789" package="Miner">
        <name>isDeleteTableFrom</name>
        <full_name>\Miner::isDeleteTableFrom()</full_name>
        <docblock line="789">
          <description>Whether the FROM table is the single table to delete from.</description>
          <long-description></long-description>
          <tag name="return" line="789" description="whether the delete table is FROM" type="bool">
            <type>bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="801" package="Miner">
        <name>set</name>
        <full_name>\Miner::set()</full_name>
        <docblock line="801">
          <description>Add a column value to INSERT or UPDATE.</description>
          <long-description></long-description>
          <tag name="param" line="801" description="&lt;p&gt;column name&lt;/p&gt;" type="string" variable="$column">
            <type>string</type>
          </tag>
          <tag name="param" line="801" description="&lt;p&gt;value&lt;/p&gt;" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="param" line="801" description="&lt;p&gt;optional auto-escape value, default to global&lt;/p&gt;" type="bool|null" variable="$quote">
            <type>bool</type>
            <type>null</type>
          </tag>
          <tag name="return" line="801" description="" type="\Miner">
            <type link="Miner.html">\Miner</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$column</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$quote</name>
          <default>null</default>
          <type>bool|null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="815" package="Miner">
        <name>mergeSetInto</name>
        <full_name>\Miner::mergeSetInto()</full_name>
        <docblock line="815">
          <description>Merge this Miner's SET into the given Miner.</description>
          <long-description></long-description>
          <tag name="param" line="815" description="&lt;p&gt;to merge into&lt;/p&gt;" type="\Miner" variable="$Miner">
            <type link="Miner.html">\Miner</type>
          </tag>
          <tag name="return" line="815" description="" type="\Miner">
            <type link="Miner.html">\Miner</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$Miner</name>
          <default></default>
          <type>\Miner</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="830" package="Miner">
        <name>getSetString</name>
        <full_name>\Miner::getSetString()</full_name>
        <docblock line="830">
          <description>Get the SET portion of the statement as a string.</description>
          <long-description></long-description>
          <tag name="param" line="830" description="&lt;p&gt;optional use ? placeholders, default true&lt;/p&gt;" type="bool" variable="$usePlaceholders">
            <type>bool</type>
          </tag>
          <tag name="param" line="830" description="&lt;p&gt;optional include 'SET' text, default true&lt;/p&gt;" type="bool" variable="$includeText">
            <type>bool</type>
          </tag>
          <tag name="return" line="830" description="SET portion of the statement" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$usePlaceholders</name>
          <default>true</default>
          <type>bool</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$includeText</name>
          <default>true</default>
          <type>bool</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="861" package="Miner">
        <name>getSetPlaceholderValues</name>
        <full_name>\Miner::getSetPlaceholderValues()</full_name>
        <docblock line="861">
          <description>Get the SET placeholder values.</description>
          <long-description></long-description>
          <tag name="return" line="861" description="SET placeholder values" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="872" package="Miner">
        <name>from</name>
        <full_name>\Miner::from()</full_name>
        <docblock line="872">
          <description>Set the FROM table with optional alias.</description>
          <long-description></long-description>
          <tag name="param" line="872" description="&lt;p&gt;table name&lt;/p&gt;" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="param" line="872" description="&lt;p&gt;optional alias&lt;/p&gt;" type="string" variable="$alias">
            <type>string</type>
          </tag>
          <tag name="return" line="872" description="" type="\Miner">
            <type link="Miner.html">\Miner</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$alias</name>
          <default>null</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="885" package="Miner">
        <name>mergeFromInto</name>
        <full_name>\Miner::mergeFromInto()</full_name>
        <docblock line="885">
          <description>Merge this Miner's FROM into the given Miner.</description>
          <long-description></long-description>
          <tag name="param" line="885" description="&lt;p&gt;to merge into&lt;/p&gt;" type="\Miner" variable="$Miner">
            <type link="Miner.html">\Miner</type>
          </tag>
          <tag name="return" line="885" description="" type="\Miner">
            <type link="Miner.html">\Miner</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$Miner</name>
          <default></default>
          <type>\Miner</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="898" package="Miner">
        <name>getFrom</name>
        <full_name>\Miner::getFrom()</full_name>
        <docblock line="898">
          <description>Get the FROM table.</description>
          <long-description></long-description>
          <tag name="return" line="898" description="FROM table" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="907" package="Miner">
        <name>getFromAlias</name>
        <full_name>\Miner::getFromAlias()</full_name>
        <docblock line="907">
          <description>Get the FROM table alias.</description>
          <long-description></long-description>
          <tag name="return" line="907" description="FROM table alias" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="918" package="Miner">
        <name>isJoinUnique</name>
        <full_name>\Miner::isJoinUnique()</full_name>
        <docblock line="918">
          <description>Whether the join table and alias is unique (hasn't already been joined).</description>
          <long-description></long-description>
          <tag name="param" line="918" description="&lt;p&gt;table name&lt;/p&gt;" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="param" line="918" description="&lt;p&gt;table alias&lt;/p&gt;" type="string" variable="$alias">
            <type>string</type>
          </tag>
          <tag name="return" line="918" description="whether the join table and alias is unique" type="bool">
            <type>bool</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$alias</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="937" package="Miner">
        <name>join</name>
        <full_name>\Miner::join()</full_name>
        <docblock line="937">
          <description>Add a JOIN table with optional ON criteria.</description>
          <long-description></long-description>
          <tag name="param" line="937" description="&lt;p&gt;table name&lt;/p&gt;" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="param" line="937" description="&lt;p&gt;optional ON criteria&lt;/p&gt;" type="string|array" variable="$criteria">
            <type>string</type>
            <type>array</type>
          </tag>
          <tag name="param" line="937" description="&lt;p&gt;optional type of join, default INNER JOIN&lt;/p&gt;" type="string" variable="$type">
            <type>string</type>
          </tag>
          <tag name="param" line="937" description="&lt;p&gt;optional alias&lt;/p&gt;" type="string" variable="$alias">
            <type>string</type>
          </tag>
          <tag name="return" line="937" description="" type="\Miner">
            <type link="Miner.html">\Miner</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$criteria</name>
          <default>null</default>
          <type>string|array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$type</name>
          <default>self::INNER_JOIN</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$alias</name>
          <default>null</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="962" package="Miner">
        <name>innerJoin</name>
        <full_name>\Miner::innerJoin()</full_name>
        <docblock line="962">
          <description>Add an INNER JOIN table with optional ON criteria.</description>
          <long-description></long-description>
          <tag name="param" line="962" description="&lt;p&gt;table name&lt;/p&gt;" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="param" line="962" description="&lt;p&gt;optional ON criteria&lt;/p&gt;" type="string|array" variable="$criteria">
            <type>string</type>
            <type>array</type>
          </tag>
          <tag name="param" line="962" description="&lt;p&gt;optional alias&lt;/p&gt;" type="string" variable="$alias">
            <type>string</type>
          </tag>
          <tag name="return" line="962" description="" type="\Miner">
            <type link="Miner.html">\Miner</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$criteria</name>
          <default>null</default>
          <type>string|array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$alias</name>
          <default>null</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="974" package="Miner">
        <name>leftJoin</name>
        <full_name>\Miner::leftJoin()</full_name>
        <docblock line="974">
          <description>Add a LEFT JOIN table with optional ON criteria.</description>
          <long-description></long-description>
          <tag name="param" line="974" description="&lt;p&gt;table name&lt;/p&gt;" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="param" line="974" description="&lt;p&gt;optional ON criteria&lt;/p&gt;" type="string|array" variable="$criteria">
            <type>string</type>
            <type>array</type>
          </tag>
          <tag name="param" line="974" description="&lt;p&gt;optional alias&lt;/p&gt;" type="string" variable="$alias">
            <type>string</type>
          </tag>
          <tag name="return" line="974" description="" type="\Miner">
            <type link="Miner.html">\Miner</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$criteria</name>
          <default>null</default>
          <type>string|array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$alias</name>
          <default>null</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="986" package="Miner">
        <name>rightJoin</name>
        <full_name>\Miner::rightJoin()</full_name>
        <docblock line="986">
          <description>Add a RIGHT JOIN table with optional ON criteria.</description>
          <long-description></long-description>
          <tag name="param" line="986" description="&lt;p&gt;table name&lt;/p&gt;" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="param" line="986" description="&lt;p&gt;optional ON criteria&lt;/p&gt;" type="string|array" variable="$criteria">
            <type>string</type>
            <type>array</type>
          </tag>
          <tag name="param" line="986" description="&lt;p&gt;optional alias&lt;/p&gt;" type="string" variable="$alias">
            <type>string</type>
          </tag>
          <tag name="return" line="986" description="" type="\Miner">
            <type link="Miner.html">\Miner</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$criteria</name>
          <default>null</default>
          <type>string|array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$alias</name>
          <default>null</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="996" package="Miner">
        <name>mergeJoinInto</name>
        <full_name>\Miner::mergeJoinInto()</full_name>
        <docblock line="996">
          <description>Merge this Miner's JOINs into the given Miner.</description>
          <long-description></long-description>
          <tag name="param" line="996" description="&lt;p&gt;to merge into&lt;/p&gt;" type="\Miner" variable="$Miner">
            <type link="Miner.html">\Miner</type>
          </tag>
          <tag name="return" line="996" description="" type="\Miner">
            <type link="Miner.html">\Miner</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$Miner</name>
          <default></default>
          <type>\Miner</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="1013" package="Miner">
        <name>getJoinCriteriaUsingPreviousTable</name>
        <full_name>\Miner::getJoinCriteriaUsingPreviousTable()</full_name>
        <docblock line="1013">
          <description>Get an ON criteria string joining the specified table and column to the
same column of the previous JOIN or FROM table.</description>
          <long-description></long-description>
          <tag name="param" line="1013" description="&lt;p&gt;index of current join&lt;/p&gt;" type="int" variable="$joinIndex">
            <type>int</type>
          </tag>
          <tag name="param" line="1013" description="&lt;p&gt;current table name&lt;/p&gt;" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="param" line="1013" description="&lt;p&gt;current column name&lt;/p&gt;" type="string" variable="$column">
            <type>string</type>
          </tag>
          <tag name="return" line="1013" description="ON join criteria" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$joinIndex</name>
          <default></default>
          <type>int</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$column</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="1047" package="Miner">
        <name>getJoinString</name>
        <full_name>\Miner::getJoinString()</full_name>
        <docblock line="1047">
          <description>Get the JOIN portion of the statement as a string.</description>
          <long-description></long-description>
          <tag name="return" line="1047" description="JOIN portion of the statement" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="1091" package="Miner">
        <name>getFromString</name>
        <full_name>\Miner::getFromString()</full_name>
        <docblock line="1091">
          <description>Get the FROM portion of the statement, including all JOINs, as a string.</description>
          <long-description></long-description>
          <tag name="param" line="1091" description="&lt;p&gt;optional include 'FROM' text, default true&lt;/p&gt;" type="bool" variable="$includeText">
            <type>bool</type>
          </tag>
          <tag name="return" line="1091" description="FROM portion of the statement" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$includeText</name>
          <default>true</default>
          <type>bool</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="1124" package="Miner">
        <name>openCriteria</name>
        <full_name>\Miner::openCriteria()</full_name>
        <docblock line="1124">
          <description>Add an open bracket for nesting conditions to the specified WHERE or
HAVING criteria.</description>
          <long-description></long-description>
          <tag name="param" line="1124" description="&lt;p&gt;WHERE or HAVING criteria&lt;/p&gt;" type="array" variable="$criteria">
            <type>array</type>
          </tag>
          <tag name="param" line="1124" description="&lt;p&gt;optional logical connector, default AND&lt;/p&gt;" type="string" variable="$connector">
            <type>string</type>
          </tag>
          <tag name="return" line="1124" description="" type="\Miner">
            <type link="Miner.html">\Miner</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="true">
          <name>$criteria</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$connector</name>
          <default>self::LOGICAL_AND</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="1138" package="Miner">
        <name>closeCriteria</name>
        <full_name>\Miner::closeCriteria()</full_name>
        <docblock line="1138">
          <description>Add a closing bracket for nesting conditions to the specified WHERE or
HAVING criteria.</description>
          <long-description></long-description>
          <tag name="param" line="1138" description="&lt;p&gt;WHERE or HAVING criteria&lt;/p&gt;" type="array" variable="$criteria">
            <type>array</type>
          </tag>
          <tag name="return" line="1138" description="" type="\Miner">
            <type link="Miner.html">\Miner</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="true">
          <name>$criteria</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="1156" package="Miner">
        <name>criteria</name>
        <full_name>\Miner::criteria()</full_name>
        <docblock line="1156">
          <description>Add a condition to the specified WHERE or HAVING criteria.</description>
          <long-description></long-description>
          <tag name="param" line="1156" description="&lt;p&gt;WHERE or HAVING criteria&lt;/p&gt;" type="array" variable="$criteria">
            <type>array</type>
          </tag>
          <tag name="param" line="1156" description="&lt;p&gt;column name&lt;/p&gt;" type="string" variable="$column">
            <type>string</type>
          </tag>
          <tag name="param" line="1156" description="&lt;p&gt;value&lt;/p&gt;" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="param" line="1156" description="&lt;p&gt;optional comparison operator, default =&lt;/p&gt;" type="string" variable="$operator">
            <type>string</type>
          </tag>
          <tag name="param" line="1156" description="&lt;p&gt;optional logical connector, default AND&lt;/p&gt;" type="string" variable="$connector">
            <type>string</type>
          </tag>
          <tag name="param" line="1156" description="&lt;p&gt;optional auto-escape value, default to global&lt;/p&gt;" type="bool|null" variable="$quote">
            <type>bool</type>
            <type>null</type>
          </tag>
          <tag name="return" line="1156" description="" type="\Miner">
            <type link="Miner.html">\Miner</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="true">
          <name>$criteria</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$column</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$operator</name>
          <default>self::EQUALS</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$connector</name>
          <default>self::LOGICAL_AND</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$quote</name>
          <default>null</default>
          <type>bool|null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="1177" package="Miner">
        <name>orCriteria</name>
        <full_name>\Miner::orCriteria()</full_name>
        <docblock line="1177">
          <description>Add an OR condition to the specified WHERE or HAVING criteria.</description>
          <long-description></long-description>
          <tag name="param" line="1177" description="&lt;p&gt;WHERE or HAVING criteria&lt;/p&gt;" type="array" variable="$criteria">
            <type>array</type>
          </tag>
          <tag name="param" line="1177" description="&lt;p&gt;column name&lt;/p&gt;" type="string" variable="$column">
            <type>string</type>
          </tag>
          <tag name="param" line="1177" description="&lt;p&gt;value&lt;/p&gt;" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="param" line="1177" description="&lt;p&gt;optional comparison operator, default =&lt;/p&gt;" type="string" variable="$operator">
            <type>string</type>
          </tag>
          <tag name="param" line="1177" description="&lt;p&gt;optional auto-escape value, default to global&lt;/p&gt;" type="bool|null" variable="$quote">
            <type>bool</type>
            <type>null</type>
          </tag>
          <tag name="return" line="1177" description="" type="\Miner">
            <type link="Miner.html">\Miner</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="true">
          <name>$criteria</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$column</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$operator</name>
          <default>self::EQUALS</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$quote</name>
          <default>null</default>
          <type>bool|null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="1191" package="Miner">
        <name>criteriaIn</name>
        <full_name>\Miner::criteriaIn()</full_name>
        <docblock line="1191">
          <description>Add an IN condition to the specified WHERE or HAVING criteria.</description>
          <long-description></long-description>
          <tag name="param" line="1191" description="&lt;p&gt;WHERE or HAVING criteria&lt;/p&gt;" type="array" variable="$criteria">
            <type>array</type>
          </tag>
          <tag name="param" line="1191" description="&lt;p&gt;column name&lt;/p&gt;" type="string" variable="$column">
            <type>string</type>
          </tag>
          <tag name="param" line="1191" description="&lt;p&gt;values&lt;/p&gt;" type="array" variable="$values">
            <type>array</type>
          </tag>
          <tag name="param" line="1191" description="&lt;p&gt;optional logical connector, default AND&lt;/p&gt;" type="string" variable="$connector">
            <type>string</type>
          </tag>
          <tag name="param" line="1191" description="&lt;p&gt;optional auto-escape value, default to global&lt;/p&gt;" type="bool|null" variable="$quote">
            <type>bool</type>
            <type>null</type>
          </tag>
          <tag name="return" line="1191" description="" type="\Miner">
            <type link="Miner.html">\Miner</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="true">
          <name>$criteria</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$column</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$values</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$connector</name>
          <default>self::LOGICAL_AND</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$quote</name>
          <default>null</default>
          <type>bool|null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="1206" package="Miner">
        <name>criteriaNotIn</name>
        <full_name>\Miner::criteriaNotIn()</full_name>
        <docblock line="1206">
          <description>Add a NOT IN condition to the specified WHERE or HAVING criteria.</description>
          <long-description></long-description>
          <tag name="param" line="1206" description="&lt;p&gt;WHERE or HAVING criteria&lt;/p&gt;" type="array" variable="$criteria">
            <type>array</type>
          </tag>
          <tag name="param" line="1206" description="&lt;p&gt;column name&lt;/p&gt;" type="string" variable="$column">
            <type>string</type>
          </tag>
          <tag name="param" line="1206" description="&lt;p&gt;values&lt;/p&gt;" type="array" variable="$values">
            <type>array</type>
          </tag>
          <tag name="param" line="1206" description="&lt;p&gt;optional logical connector, default AND&lt;/p&gt;" type="string" variable="$connector">
            <type>string</type>
          </tag>
          <tag name="param" line="1206" description="&lt;p&gt;optional auto-escape value, default to global&lt;/p&gt;" type="bool|null" variable="$quote">
            <type>bool</type>
            <type>null</type>
          </tag>
          <tag name="return" line="1206" description="" type="\Miner">
            <type link="Miner.html">\Miner</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="true">
          <name>$criteria</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$column</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$values</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$connector</name>
          <default>self::LOGICAL_AND</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$quote</name>
          <default>null</default>
          <type>bool|null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="1222" package="Miner">
        <name>criteriaBetween</name>
        <full_name>\Miner::criteriaBetween()</full_name>
        <docblock line="1222">
          <description>Add a BETWEEN condition to the specified WHERE or HAVING criteria.</description>
          <long-description></long-description>
          <tag name="param" line="1222" description="&lt;p&gt;WHERE or HAVING criteria&lt;/p&gt;" type="array" variable="$criteria">
            <type>array</type>
          </tag>
          <tag name="param" line="1222" description="&lt;p&gt;column name&lt;/p&gt;" type="string" variable="$column">
            <type>string</type>
          </tag>
          <tag name="param" line="1222" description="&lt;p&gt;minimum value&lt;/p&gt;" type="mixed" variable="$min">
            <type>mixed</type>
          </tag>
          <tag name="param" line="1222" description="&lt;p&gt;maximum value&lt;/p&gt;" type="mixed" variable="$max">
            <type>mixed</type>
          </tag>
          <tag name="param" line="1222" description="&lt;p&gt;optional logical connector, default AND&lt;/p&gt;" type="string" variable="$connector">
            <type>string</type>
          </tag>
          <tag name="param" line="1222" description="&lt;p&gt;optional auto-escape value, default to global&lt;/p&gt;" type="bool|null" variable="$quote">
            <type>bool</type>
            <type>null</type>
          </tag>
          <tag name="return" line="1222" description="" type="\Miner">
            <type link="Miner.html">\Miner</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="true">
          <name>$criteria</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$column</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$min</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$max</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$connector</name>
          <default>self::LOGICAL_AND</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$quote</name>
          <default>null</default>
          <type>bool|null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="1238" package="Miner">
        <name>criteriaNotBetween</name>
        <full_name>\Miner::criteriaNotBetween()</full_name>
        <docblock line="1238">
          <description>Add a NOT BETWEEN condition to the specified WHERE or HAVING criteria.</description>
          <long-description></long-description>
          <tag name="param" line="1238" description="&lt;p&gt;WHERE or HAVING criteria&lt;/p&gt;" type="array" variable="$criteria">
            <type>array</type>
          </tag>
          <tag name="param" line="1238" description="&lt;p&gt;column name&lt;/p&gt;" type="string" variable="$column">
            <type>string</type>
          </tag>
          <tag name="param" line="1238" description="&lt;p&gt;minimum value&lt;/p&gt;" type="mixed" variable="$min">
            <type>mixed</type>
          </tag>
          <tag name="param" line="1238" description="&lt;p&gt;maximum value&lt;/p&gt;" type="mixed" variable="$max">
            <type>mixed</type>
          </tag>
          <tag name="param" line="1238" description="&lt;p&gt;optional logical connector, default AND&lt;/p&gt;" type="string" variable="$connector">
            <type>string</type>
          </tag>
          <tag name="param" line="1238" description="&lt;p&gt;optional auto-escape value, default to global&lt;/p&gt;" type="bool|null" variable="$quote">
            <type>bool</type>
            <type>null</type>
          </tag>
          <tag name="return" line="1238" description="" type="\Miner">
            <type link="Miner.html">\Miner</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="true">
          <name>$criteria</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$column</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$min</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$max</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$connector</name>
          <default>self::LOGICAL_AND</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$quote</name>
          <default>null</default>
          <type>bool|null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="1251" package="Miner">
        <name>getCriteriaString</name>
        <full_name>\Miner::getCriteriaString()</full_name>
        <docblock line="1251">
          <description>Get the WHERE or HAVING portion of the statement as a string.</description>
          <long-description></long-description>
          <tag name="param" line="1251" description="&lt;p&gt;WHERE or HAVING criteria&lt;/p&gt;" type="array" variable="$criteria">
            <type>array</type>
          </tag>
          <tag name="param" line="1251" description="&lt;p&gt;optional use ? placeholders, default true&lt;/p&gt;" type="bool" variable="$usePlaceholders">
            <type>bool</type>
          </tag>
          <tag name="param" line="1251" description="&lt;p&gt;optional placeholder values array&lt;/p&gt;" type="array" variable="$placeholderValues">
            <type>array</type>
          </tag>
          <tag name="return" line="1251" description="WHERE or HAVING portion of the statement" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="true">
          <name>$criteria</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$usePlaceholders</name>
          <default>true</default>
          <type>bool</type>
        </argument>
        <argument line="0" by_reference="true">
          <name>$placeholderValues</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="1351" package="Miner">
        <name>openWhere</name>
        <full_name>\Miner::openWhere()</full_name>
        <docblock line="1351">
          <description>Add an open bracket for nesting WHERE conditions.</description>
          <long-description></long-description>
          <tag name="param" line="1351" description="&lt;p&gt;optional logical connector, default AND&lt;/p&gt;" type="string" variable="$connector">
            <type>string</type>
          </tag>
          <tag name="return" line="1351" description="" type="\Miner">
            <type link="Miner.html">\Miner</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$connector</name>
          <default>self::LOGICAL_AND</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="1360" package="Miner">
        <name>closeWhere</name>
        <full_name>\Miner::closeWhere()</full_name>
        <docblock line="1360">
          <description>Add a closing bracket for nesting WHERE conditions.</description>
          <long-description></long-description>
          <tag name="return" line="1360" description="" type="\Miner">
            <type link="Miner.html">\Miner</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="1374" package="Miner">
        <name>where</name>
        <full_name>\Miner::where()</full_name>
        <docblock line="1374">
          <description>Add a WHERE condition.</description>
          <long-description></long-description>
          <tag name="param" line="1374" description="&lt;p&gt;column name&lt;/p&gt;" type="string" variable="$column">
            <type>string</type>
          </tag>
          <tag name="param" line="1374" description="&lt;p&gt;value&lt;/p&gt;" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="param" line="1374" description="&lt;p&gt;optional comparison operator, default =&lt;/p&gt;" type="string" variable="$operator">
            <type>string</type>
          </tag>
          <tag name="param" line="1374" description="&lt;p&gt;optional logical connector, default AND&lt;/p&gt;" type="string" variable="$connector">
            <type>string</type>
          </tag>
          <tag name="param" line="1374" description="&lt;p&gt;optional auto-escape value, default to global&lt;/p&gt;" type="bool|null" variable="$quote">
            <type>bool</type>
            <type>null</type>
          </tag>
          <tag name="return" line="1374" description="" type="\Miner">
            <type link="Miner.html">\Miner</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$column</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$operator</name>
          <default>self::EQUALS</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$connector</name>
          <default>self::LOGICAL_AND</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$quote</name>
          <default>null</default>
          <type>bool|null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="1387" package="Miner">
        <name>andWhere</name>
        <full_name>\Miner::andWhere()</full_name>
        <docblock line="1387">
          <description>Add an AND WHERE condition.</description>
          <long-description></long-description>
          <tag name="param" line="1387" description="&lt;p&gt;colum name&lt;/p&gt;" type="string" variable="$column">
            <type>string</type>
          </tag>
          <tag name="param" line="1387" description="&lt;p&gt;value&lt;/p&gt;" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="param" line="1387" description="&lt;p&gt;optional comparison operator, default =&lt;/p&gt;" type="string" variable="$operator">
            <type>string</type>
          </tag>
          <tag name="param" line="1387" description="&lt;p&gt;optional auto-escape value, default to global&lt;/p&gt;" type="bool|null" variable="$quote">
            <type>bool</type>
            <type>null</type>
          </tag>
          <tag name="return" line="1387" description="" type="\Miner">
            <type link="Miner.html">\Miner</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$column</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$operator</name>
          <default>self::EQUALS</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$quote</name>
          <default>null</default>
          <type>bool|null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="1400" package="Miner">
        <name>orWhere</name>
        <full_name>\Miner::orWhere()</full_name>
        <docblock line="1400">
          <description>Add an OR WHERE condition.</description>
          <long-description></long-description>
          <tag name="param" line="1400" description="&lt;p&gt;colum name&lt;/p&gt;" type="string" variable="$column">
            <type>string</type>
          </tag>
          <tag name="param" line="1400" description="&lt;p&gt;value&lt;/p&gt;" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="param" line="1400" description="&lt;p&gt;optional comparison operator, default =&lt;/p&gt;" type="string" variable="$operator">
            <type>string</type>
          </tag>
          <tag name="param" line="1400" description="&lt;p&gt;optional auto-escape value, default to global&lt;/p&gt;" type="bool|null" variable="$quote">
            <type>bool</type>
            <type>null</type>
          </tag>
          <tag name="return" line="1400" description="" type="\Miner">
            <type link="Miner.html">\Miner</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$column</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$operator</name>
          <default>self::EQUALS</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$quote</name>
          <default>null</default>
          <type>bool|null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="1413" package="Miner">
        <name>whereIn</name>
        <full_name>\Miner::whereIn()</full_name>
        <docblock line="1413">
          <description>Add an IN WHERE condition.</description>
          <long-description></long-description>
          <tag name="param" line="1413" description="&lt;p&gt;column name&lt;/p&gt;" type="string" variable="$column">
            <type>string</type>
          </tag>
          <tag name="param" line="1413" description="&lt;p&gt;values&lt;/p&gt;" type="array" variable="$values">
            <type>array</type>
          </tag>
          <tag name="param" line="1413" description="&lt;p&gt;optional logical connector, default AND&lt;/p&gt;" type="string" variable="$connector">
            <type>string</type>
          </tag>
          <tag name="param" line="1413" description="&lt;p&gt;optional auto-escape value, default to global&lt;/p&gt;" type="bool|null" variable="$quote">
            <type>bool</type>
            <type>null</type>
          </tag>
          <tag name="return" line="1413" description="" type="\Miner">
            <type link="Miner.html">\Miner</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$column</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$values</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$connector</name>
          <default>self::LOGICAL_AND</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$quote</name>
          <default>null</default>
          <type>bool|null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="1426" package="Miner">
        <name>whereNotIn</name>
        <full_name>\Miner::whereNotIn()</full_name>
        <docblock line="1426">
          <description>Add a NOT IN WHERE condition.</description>
          <long-description></long-description>
          <tag name="param" line="1426" description="&lt;p&gt;column name&lt;/p&gt;" type="string" variable="$column">
            <type>string</type>
          </tag>
          <tag name="param" line="1426" description="&lt;p&gt;values&lt;/p&gt;" type="array" variable="$values">
            <type>array</type>
          </tag>
          <tag name="param" line="1426" description="&lt;p&gt;optional logical connector, default AND&lt;/p&gt;" type="string" variable="$connector">
            <type>string</type>
          </tag>
          <tag name="param" line="1426" description="&lt;p&gt;optional auto-escape value, default to global&lt;/p&gt;" type="bool|null" variable="$quote">
            <type>bool</type>
            <type>null</type>
          </tag>
          <tag name="return" line="1426" description="" type="\Miner">
            <type link="Miner.html">\Miner</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$column</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$values</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$connector</name>
          <default>self::LOGICAL_AND</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$quote</name>
          <default>null</default>
          <type>bool|null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="1440" package="Miner">
        <name>whereBetween</name>
        <full_name>\Miner::whereBetween()</full_name>
        <docblock line="1440">
          <description>Add a BETWEEN WHERE condition.</description>
          <long-description></long-description>
          <tag name="param" line="1440" description="&lt;p&gt;column name&lt;/p&gt;" type="string" variable="$column">
            <type>string</type>
          </tag>
          <tag name="param" line="1440" description="&lt;p&gt;minimum value&lt;/p&gt;" type="mixed" variable="$min">
            <type>mixed</type>
          </tag>
          <tag name="param" line="1440" description="&lt;p&gt;maximum value&lt;/p&gt;" type="mixed" variable="$max">
            <type>mixed</type>
          </tag>
          <tag name="param" line="1440" description="&lt;p&gt;optional logical connector, default AND&lt;/p&gt;" type="string" variable="$connector">
            <type>string</type>
          </tag>
          <tag name="param" line="1440" description="&lt;p&gt;optional auto-escape value, default to global&lt;/p&gt;" type="bool|null" variable="$quote">
            <type>bool</type>
            <type>null</type>
          </tag>
          <tag name="return" line="1440" description="" type="\Miner">
            <type link="Miner.html">\Miner</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$column</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$min</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$max</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$connector</name>
          <default>self::LOGICAL_AND</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$quote</name>
          <default>null</default>
          <type>bool|null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="1454" package="Miner">
        <name>whereNotBetween</name>
        <full_name>\Miner::whereNotBetween()</full_name>
        <docblock line="1454">
          <description>Add a NOT BETWEEN WHERE condition.</description>
          <long-description></long-description>
          <tag name="param" line="1454" description="&lt;p&gt;column name&lt;/p&gt;" type="string" variable="$column">
            <type>string</type>
          </tag>
          <tag name="param" line="1454" description="&lt;p&gt;minimum value&lt;/p&gt;" type="mixed" variable="$min">
            <type>mixed</type>
          </tag>
          <tag name="param" line="1454" description="&lt;p&gt;maximum value&lt;/p&gt;" type="mixed" variable="$max">
            <type>mixed</type>
          </tag>
          <tag name="param" line="1454" description="&lt;p&gt;optional logical connector, default AND&lt;/p&gt;" type="string" variable="$connector">
            <type>string</type>
          </tag>
          <tag name="param" line="1454" description="&lt;p&gt;optional auto-escape value, default to global&lt;/p&gt;" type="bool|null" variable="$quote">
            <type>bool</type>
            <type>null</type>
          </tag>
          <tag name="return" line="1454" description="" type="\Miner">
            <type link="Miner.html">\Miner</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$column</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$min</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$max</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$connector</name>
          <default>self::LOGICAL_AND</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$quote</name>
          <default>null</default>
          <type>bool|null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="1464" package="Miner">
        <name>mergeWhereInto</name>
        <full_name>\Miner::mergeWhereInto()</full_name>
        <docblock line="1464">
          <description>Merge this Miner's WHERE into the given Miner.</description>
          <long-description></long-description>
          <tag name="param" line="1464" description="&lt;p&gt;to merge into&lt;/p&gt;" type="\Miner" variable="$Miner">
            <type link="Miner.html">\Miner</type>
          </tag>
          <tag name="return" line="1464" description="" type="\Miner">
            <type link="Miner.html">\Miner</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$Miner</name>
          <default></default>
          <type>\Miner</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="1490" package="Miner">
        <name>getWhereString</name>
        <full_name>\Miner::getWhereString()</full_name>
        <docblock line="1490">
          <description>Get the WHERE portion of the statement as a string.</description>
          <long-description></long-description>
          <tag name="param" line="1490" description="&lt;p&gt;optional use ? placeholders, default true&lt;/p&gt;" type="bool" variable="$usePlaceholders">
            <type>bool</type>
          </tag>
          <tag name="param" line="1490" description="&lt;p&gt;optional include 'WHERE' text, default true&lt;/p&gt;" type="bool" variable="$includeText">
            <type>bool</type>
          </tag>
          <tag name="return" line="1490" description="WHERE portion of the statement" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$usePlaceholders</name>
          <default>true</default>
          <type>bool</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$includeText</name>
          <default>true</default>
          <type>bool</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="1505" package="Miner">
        <name>getWherePlaceholderValues</name>
        <full_name>\Miner::getWherePlaceholderValues()</full_name>
        <docblock line="1505">
          <description>Get the WHERE placeholder values.</description>
          <long-description></long-description>
          <tag name="return" line="1505" description="WHERE placeholder values" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="1516" package="Miner">
        <name>groupBy</name>
        <full_name>\Miner::groupBy()</full_name>
        <docblock line="1516">
          <description>Add a GROUP BY column.</description>
          <long-description></long-description>
          <tag name="param" line="1516" description="&lt;p&gt;column name&lt;/p&gt;" type="string" variable="$column">
            <type>string</type>
          </tag>
          <tag name="param" line="1516" description="&lt;p&gt;optional order direction, default none&lt;/p&gt;" type="string|null" variable="$order">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="return" line="1516" description="" type="\Miner">
            <type link="Miner.html">\Miner</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$column</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$order</name>
          <default>null</default>
          <type>string|null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="1529" package="Miner">
        <name>mergeGroupByInto</name>
        <full_name>\Miner::mergeGroupByInto()</full_name>
        <docblock line="1529">
          <description>Merge this Miner's GROUP BY into the given Miner.</description>
          <long-description></long-description>
          <tag name="param" line="1529" description="&lt;p&gt;to merge into&lt;/p&gt;" type="\Miner" variable="$Miner">
            <type link="Miner.html">\Miner</type>
          </tag>
          <tag name="return" line="1529" description="" type="\Miner">
            <type link="Miner.html">\Miner</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$Miner</name>
          <default></default>
          <type>\Miner</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="1543" package="Miner">
        <name>getGroupByString</name>
        <full_name>\Miner::getGroupByString()</full_name>
        <docblock line="1543">
          <description>Get the GROUP BY portion of the statement as a string.</description>
          <long-description></long-description>
          <tag name="param" line="1543" description="&lt;p&gt;optional include 'GROUP BY' text, default true&lt;/p&gt;" type="bool" variable="$includeText">
            <type>bool</type>
          </tag>
          <tag name="return" line="1543" description="GROUP BY portion of the statement" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$includeText</name>
          <default>true</default>
          <type>bool</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="1571" package="Miner">
        <name>openHaving</name>
        <full_name>\Miner::openHaving()</full_name>
        <docblock line="1571">
          <description>Add an open bracket for nesting HAVING conditions.</description>
          <long-description></long-description>
          <tag name="param" line="1571" description="&lt;p&gt;optional logical connector, default AND&lt;/p&gt;" type="string" variable="$connector">
            <type>string</type>
          </tag>
          <tag name="return" line="1571" description="" type="\Miner">
            <type link="Miner.html">\Miner</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$connector</name>
          <default>self::LOGICAL_AND</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="1580" package="Miner">
        <name>closeHaving</name>
        <full_name>\Miner::closeHaving()</full_name>
        <docblock line="1580">
          <description>Add a closing bracket for nesting HAVING conditions.</description>
          <long-description></long-description>
          <tag name="return" line="1580" description="" type="\Miner">
            <type link="Miner.html">\Miner</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="1594" package="Miner">
        <name>having</name>
        <full_name>\Miner::having()</full_name>
        <docblock line="1594">
          <description>Add a HAVING condition.</description>
          <long-description></long-description>
          <tag name="param" line="1594" description="&lt;p&gt;colum name&lt;/p&gt;" type="string" variable="$column">
            <type>string</type>
          </tag>
          <tag name="param" line="1594" description="&lt;p&gt;value&lt;/p&gt;" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="param" line="1594" description="&lt;p&gt;optional comparison operator, default =&lt;/p&gt;" type="string" variable="$operator">
            <type>string</type>
          </tag>
          <tag name="param" line="1594" description="&lt;p&gt;optional logical connector, default AND&lt;/p&gt;" type="string" variable="$connector">
            <type>string</type>
          </tag>
          <tag name="param" line="1594" description="&lt;p&gt;optional auto-escape value, default to global&lt;/p&gt;" type="bool|null" variable="$quote">
            <type>bool</type>
            <type>null</type>
          </tag>
          <tag name="return" line="1594" description="" type="\Miner">
            <type link="Miner.html">\Miner</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$column</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$operator</name>
          <default>self::EQUALS</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$connector</name>
          <default>self::LOGICAL_AND</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$quote</name>
          <default>null</default>
          <type>bool|null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="1607" package="Miner">
        <name>andHaving</name>
        <full_name>\Miner::andHaving()</full_name>
        <docblock line="1607">
          <description>Add an AND HAVING condition.</description>
          <long-description></long-description>
          <tag name="param" line="1607" description="&lt;p&gt;colum name&lt;/p&gt;" type="string" variable="$column">
            <type>string</type>
          </tag>
          <tag name="param" line="1607" description="&lt;p&gt;value&lt;/p&gt;" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="param" line="1607" description="&lt;p&gt;optional comparison operator, default =&lt;/p&gt;" type="string" variable="$operator">
            <type>string</type>
          </tag>
          <tag name="param" line="1607" description="&lt;p&gt;optional auto-escape value, default to global&lt;/p&gt;" type="bool|null" variable="$quote">
            <type>bool</type>
            <type>null</type>
          </tag>
          <tag name="return" line="1607" description="" type="\Miner">
            <type link="Miner.html">\Miner</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$column</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$operator</name>
          <default>self::EQUALS</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$quote</name>
          <default>null</default>
          <type>bool|null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="1620" package="Miner">
        <name>orHaving</name>
        <full_name>\Miner::orHaving()</full_name>
        <docblock line="1620">
          <description>Add an OR HAVING condition.</description>
          <long-description></long-description>
          <tag name="param" line="1620" description="&lt;p&gt;colum name&lt;/p&gt;" type="string" variable="$column">
            <type>string</type>
          </tag>
          <tag name="param" line="1620" description="&lt;p&gt;value&lt;/p&gt;" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="param" line="1620" description="&lt;p&gt;optional comparison operator, default =&lt;/p&gt;" type="string" variable="$operator">
            <type>string</type>
          </tag>
          <tag name="param" line="1620" description="&lt;p&gt;optional auto-escape value, default to global&lt;/p&gt;" type="bool|null" variable="$quote">
            <type>bool</type>
            <type>null</type>
          </tag>
          <tag name="return" line="1620" description="" type="\Miner">
            <type link="Miner.html">\Miner</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$column</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$operator</name>
          <default>self::EQUALS</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$quote</name>
          <default>null</default>
          <type>bool|null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="1633" package="Miner">
        <name>havingIn</name>
        <full_name>\Miner::havingIn()</full_name>
        <docblock line="1633">
          <description>Add an IN WHERE condition.</description>
          <long-description></long-description>
          <tag name="param" line="1633" description="&lt;p&gt;column name&lt;/p&gt;" type="string" variable="$column">
            <type>string</type>
          </tag>
          <tag name="param" line="1633" description="&lt;p&gt;values&lt;/p&gt;" type="array" variable="$values">
            <type>array</type>
          </tag>
          <tag name="param" line="1633" description="&lt;p&gt;optional logical connector, default AND&lt;/p&gt;" type="string" variable="$connector">
            <type>string</type>
          </tag>
          <tag name="param" line="1633" description="&lt;p&gt;optional auto-escape value, default to global&lt;/p&gt;" type="bool|null" variable="$quote">
            <type>bool</type>
            <type>null</type>
          </tag>
          <tag name="return" line="1633" description="" type="\Miner">
            <type link="Miner.html">\Miner</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$column</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$values</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$connector</name>
          <default>self::LOGICAL_AND</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$quote</name>
          <default>null</default>
          <type>bool|null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="1646" package="Miner">
        <name>havingNotIn</name>
        <full_name>\Miner::havingNotIn()</full_name>
        <docblock line="1646">
          <description>Add a NOT IN HAVING condition.</description>
          <long-description></long-description>
          <tag name="param" line="1646" description="&lt;p&gt;column name&lt;/p&gt;" type="string" variable="$column">
            <type>string</type>
          </tag>
          <tag name="param" line="1646" description="&lt;p&gt;values&lt;/p&gt;" type="array" variable="$values">
            <type>array</type>
          </tag>
          <tag name="param" line="1646" description="&lt;p&gt;optional logical connector, default AND&lt;/p&gt;" type="string" variable="$connector">
            <type>string</type>
          </tag>
          <tag name="param" line="1646" description="&lt;p&gt;optional auto-escape value, default to global&lt;/p&gt;" type="bool|null" variable="$quote">
            <type>bool</type>
            <type>null</type>
          </tag>
          <tag name="return" line="1646" description="" type="\Miner">
            <type link="Miner.html">\Miner</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$column</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$values</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$connector</name>
          <default>self::LOGICAL_AND</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$quote</name>
          <default>null</default>
          <type>bool|null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="1660" package="Miner">
        <name>havingBetween</name>
        <full_name>\Miner::havingBetween()</full_name>
        <docblock line="1660">
          <description>Add a BETWEEN HAVING condition.</description>
          <long-description></long-description>
          <tag name="param" line="1660" description="&lt;p&gt;column name&lt;/p&gt;" type="string" variable="$column">
            <type>string</type>
          </tag>
          <tag name="param" line="1660" description="&lt;p&gt;minimum value&lt;/p&gt;" type="mixed" variable="$min">
            <type>mixed</type>
          </tag>
          <tag name="param" line="1660" description="&lt;p&gt;maximum value&lt;/p&gt;" type="mixed" variable="$max">
            <type>mixed</type>
          </tag>
          <tag name="param" line="1660" description="&lt;p&gt;optional logical connector, default AND&lt;/p&gt;" type="string" variable="$connector">
            <type>string</type>
          </tag>
          <tag name="param" line="1660" description="&lt;p&gt;optional auto-escape value, default to global&lt;/p&gt;" type="bool|null" variable="$quote">
            <type>bool</type>
            <type>null</type>
          </tag>
          <tag name="return" line="1660" description="" type="\Miner">
            <type link="Miner.html">\Miner</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$column</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$min</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$max</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$connector</name>
          <default>self::LOGICAL_AND</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$quote</name>
          <default>null</default>
          <type>bool|null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="1674" package="Miner">
        <name>havingNotBetween</name>
        <full_name>\Miner::havingNotBetween()</full_name>
        <docblock line="1674">
          <description>Add a NOT BETWEEN HAVING condition.</description>
          <long-description></long-description>
          <tag name="param" line="1674" description="&lt;p&gt;column name&lt;/p&gt;" type="string" variable="$column">
            <type>string</type>
          </tag>
          <tag name="param" line="1674" description="&lt;p&gt;minimum value&lt;/p&gt;" type="mixed" variable="$min">
            <type>mixed</type>
          </tag>
          <tag name="param" line="1674" description="&lt;p&gt;maximum value&lt;/p&gt;" type="mixed" variable="$max">
            <type>mixed</type>
          </tag>
          <tag name="param" line="1674" description="&lt;p&gt;optional logical connector, default AND&lt;/p&gt;" type="string" variable="$connector">
            <type>string</type>
          </tag>
          <tag name="param" line="1674" description="&lt;p&gt;optional auto-escape value, default to global&lt;/p&gt;" type="bool|null" variable="$quote">
            <type>bool</type>
            <type>null</type>
          </tag>
          <tag name="return" line="1674" description="" type="\Miner">
            <type link="Miner.html">\Miner</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$column</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$min</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$max</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$connector</name>
          <default>self::LOGICAL_AND</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$quote</name>
          <default>null</default>
          <type>bool|null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="1684" package="Miner">
        <name>mergeHavingInto</name>
        <full_name>\Miner::mergeHavingInto()</full_name>
        <docblock line="1684">
          <description>Merge this Miner's HAVING into the given Miner.</description>
          <long-description></long-description>
          <tag name="param" line="1684" description="&lt;p&gt;to merge into&lt;/p&gt;" type="\Miner" variable="$Miner">
            <type link="Miner.html">\Miner</type>
          </tag>
          <tag name="return" line="1684" description="" type="\Miner">
            <type link="Miner.html">\Miner</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$Miner</name>
          <default></default>
          <type>\Miner</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="1711" package="Miner">
        <name>getHavingString</name>
        <full_name>\Miner::getHavingString()</full_name>
        <docblock line="1711">
          <description>Get the HAVING portion of the statement as a string.</description>
          <long-description></long-description>
          <tag name="param" line="1711" description="&lt;p&gt;optional use ? placeholders, default true&lt;/p&gt;" type="bool" variable="$usePlaceholders">
            <type>bool</type>
          </tag>
          <tag name="param" line="1711" description="&lt;p&gt;optional include 'HAVING' text, default true&lt;/p&gt;" type="bool" variable="$includeText">
            <type>bool</type>
          </tag>
          <tag name="return" line="1711" description="HAVING portion of the statement" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$usePlaceholders</name>
          <default>true</default>
          <type>bool</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$includeText</name>
          <default>true</default>
          <type>bool</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="1726" package="Miner">
        <name>getHavingPlaceholderValues</name>
        <full_name>\Miner::getHavingPlaceholderValues()</full_name>
        <docblock line="1726">
          <description>Get the HAVING placeholder values.</description>
          <long-description></long-description>
          <tag name="return" line="1726" description="HAVING placeholder values" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="1737" package="Miner">
        <name>orderBy</name>
        <full_name>\Miner::orderBy()</full_name>
        <docblock line="1737">
          <description>Add a column to ORDER BY.</description>
          <long-description></long-description>
          <tag name="param" line="1737" description="&lt;p&gt;column name&lt;/p&gt;" type="string" variable="$column">
            <type>string</type>
          </tag>
          <tag name="param" line="1737" description="&lt;p&gt;optional order direction, default ASC&lt;/p&gt;" type="string" variable="$order">
            <type>string</type>
          </tag>
          <tag name="return" line="1737" description="" type="\Miner">
            <type link="Miner.html">\Miner</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$column</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$order</name>
          <default>self::ORDER_BY_ASC</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="1750" package="Miner">
        <name>mergeOrderByInto</name>
        <full_name>\Miner::mergeOrderByInto()</full_name>
        <docblock line="1750">
          <description>Merge this Miner's ORDER BY into the given Miner.</description>
          <long-description></long-description>
          <tag name="param" line="1750" description="&lt;p&gt;to merge into&lt;/p&gt;" type="\Miner" variable="$Miner">
            <type link="Miner.html">\Miner</type>
          </tag>
          <tag name="return" line="1750" description="" type="\Miner">
            <type link="Miner.html">\Miner</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$Miner</name>
          <default></default>
          <type>\Miner</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="1764" package="Miner">
        <name>getOrderByString</name>
        <full_name>\Miner::getOrderByString()</full_name>
        <docblock line="1764">
          <description>Get the ORDER BY portion of the statement as a string.</description>
          <long-description></long-description>
          <tag name="param" line="1764" description="&lt;p&gt;optional include 'ORDER BY' text, default true&lt;/p&gt;" type="bool" variable="$includeText">
            <type>bool</type>
          </tag>
          <tag name="return" line="1764" description="ORDER BY portion of the statement" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$includeText</name>
          <default>true</default>
          <type>bool</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="1787" package="Miner">
        <name>limit</name>
        <full_name>\Miner::limit()</full_name>
        <docblock line="1787">
          <description>Set the LIMIT on number of rows to return with optional offset.</description>
          <long-description></long-description>
          <tag name="param" line="1787" description="&lt;p&gt;number of rows to return&lt;/p&gt;" type="int|string" variable="$limit">
            <type>int</type>
            <type>string</type>
          </tag>
          <tag name="param" line="1787" description="&lt;p&gt;optional row number to start at, default 0&lt;/p&gt;" type="int|string" variable="$offset">
            <type>int</type>
            <type>string</type>
          </tag>
          <tag name="return" line="1787" description="" type="\Miner">
            <type link="Miner.html">\Miner</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$limit</name>
          <default></default>
          <type>int|string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default>0</default>
          <type>int|string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="1800" package="Miner">
        <name>mergeLimitInto</name>
        <full_name>\Miner::mergeLimitInto()</full_name>
        <docblock line="1800">
          <description>Merge this Miner's LIMIT into the given Miner.</description>
          <long-description></long-description>
          <tag name="param" line="1800" description="&lt;p&gt;to merge into&lt;/p&gt;" type="\Miner" variable="$Miner">
            <type link="Miner.html">\Miner</type>
          </tag>
          <tag name="return" line="1800" description="" type="\Miner">
            <type link="Miner.html">\Miner</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$Miner</name>
          <default></default>
          <type>\Miner</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="1813" package="Miner">
        <name>getLimit</name>
        <full_name>\Miner::getLimit()</full_name>
        <docblock line="1813">
          <description>Get the LIMIT on number of rows to return.</description>
          <long-description></long-description>
          <tag name="return" line="1813" description="LIMIT on number of rows to return" type="int|string">
            <type>int</type>
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="1822" package="Miner">
        <name>getLimitOffset</name>
        <full_name>\Miner::getLimitOffset()</full_name>
        <docblock line="1822">
          <description>Get the LIMIT row number to start at.</description>
          <long-description></long-description>
          <tag name="return" line="1822" description="LIMIT row number to start at" type="int|string">
            <type>int</type>
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="1832" package="Miner">
        <name>getLimitString</name>
        <full_name>\Miner::getLimitString()</full_name>
        <docblock line="1832">
          <description>Get the LIMIT portion of the statement as a string.</description>
          <long-description></long-description>
          <tag name="param" line="1832" description="&lt;p&gt;optional include 'LIMIT' text, default true&lt;/p&gt;" type="bool" variable="$includeText">
            <type>bool</type>
          </tag>
          <tag name="return" line="1832" description="LIMIT portion of the statement" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$includeText</name>
          <default>true</default>
          <type>bool</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="1857" package="Miner">
        <name>isSelect</name>
        <full_name>\Miner::isSelect()</full_name>
        <docblock line="1857">
          <description>Whether this is a SELECT statement.</description>
          <long-description></long-description>
          <tag name="return" line="1857" description="whether this is a SELECT statement" type="bool">
            <type>bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="1866" package="Miner">
        <name>isInsert</name>
        <full_name>\Miner::isInsert()</full_name>
        <docblock line="1866">
          <description>Whether this is an INSERT statement.</description>
          <long-description></long-description>
          <tag name="return" line="1866" description="whether this is an INSERT statement" type="bool">
            <type>bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="1875" package="Miner">
        <name>isReplace</name>
        <full_name>\Miner::isReplace()</full_name>
        <docblock line="1875">
          <description>Whether this is a REPLACE statement.</description>
          <long-description></long-description>
          <tag name="return" line="1875" description="whether this is a REPLACE statement" type="bool">
            <type>bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="1884" package="Miner">
        <name>isUpdate</name>
        <full_name>\Miner::isUpdate()</full_name>
        <docblock line="1884">
          <description>Whether this is an UPDATE statement.</description>
          <long-description></long-description>
          <tag name="return" line="1884" description="whether this is an UPDATE statement" type="bool">
            <type>bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="1893" package="Miner">
        <name>isDelete</name>
        <full_name>\Miner::isDelete()</full_name>
        <docblock line="1893">
          <description>Whether this is a DELETE statement.</description>
          <long-description></long-description>
          <tag name="return" line="1893" description="whether this is a DELETE statement" type="bool">
            <type>bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="1904" package="Miner">
        <name>mergeInto</name>
        <full_name>\Miner::mergeInto()</full_name>
        <docblock line="1904">
          <description>Merge this Miner into the given Miner.</description>
          <long-description></long-description>
          <tag name="param" line="1904" description="&lt;p&gt;to merge into&lt;/p&gt;" type="\Miner" variable="$Miner">
            <type link="Miner.html">\Miner</type>
          </tag>
          <tag name="param" line="1904" description="&lt;p&gt;optional override limit, default true&lt;/p&gt;" type="bool" variable="$overrideLimit">
            <type>bool</type>
          </tag>
          <tag name="return" line="1904" description="" type="\Miner">
            <type link="Miner.html">\Miner</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$Miner</name>
          <default></default>
          <type>\Miner</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$overrideLimit</name>
          <default>true</default>
          <type>bool</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="1967" package="Miner">
        <name>getSelectStatement</name>
        <full_name>\Miner::getSelectStatement()</full_name>
        <docblock line="1967">
          <description>Get the full SELECT statement.</description>
          <long-description></long-description>
          <tag name="param" line="1967" description="&lt;p&gt;optional use ? placeholders, default true&lt;/p&gt;" type="bool" variable="$usePlaceholders">
            <type>bool</type>
          </tag>
          <tag name="return" line="1967" description="full SELECT statement" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$usePlaceholders</name>
          <default>true</default>
          <type>bool</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="2009" package="Miner">
        <name>getInsertStatement</name>
        <full_name>\Miner::getInsertStatement()</full_name>
        <docblock line="2009">
          <description>Get the full INSERT statement.</description>
          <long-description></long-description>
          <tag name="param" line="2009" description="&lt;p&gt;optional use ? placeholders, default true&lt;/p&gt;" type="bool" variable="$usePlaceholders">
            <type>bool</type>
          </tag>
          <tag name="return" line="2009" description="full INSERT statement" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$usePlaceholders</name>
          <default>true</default>
          <type>bool</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="2031" package="Miner">
        <name>getReplaceStatement</name>
        <full_name>\Miner::getReplaceStatement()</full_name>
        <docblock line="2031">
          <description>Get the full REPLACE statement.</description>
          <long-description></long-description>
          <tag name="param" line="2031" description="&lt;p&gt;optional use ? placeholders, default true&lt;/p&gt;" type="bool" variable="$usePlaceholders">
            <type>bool</type>
          </tag>
          <tag name="return" line="2031" description="full REPLACE statement" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$usePlaceholders</name>
          <default>true</default>
          <type>bool</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="2053" package="Miner">
        <name>getUpdateStatement</name>
        <full_name>\Miner::getUpdateStatement()</full_name>
        <docblock line="2053">
          <description>Get the full UPDATE statement.</description>
          <long-description></long-description>
          <tag name="param" line="2053" description="&lt;p&gt;optional use ? placeholders, default true&lt;/p&gt;" type="bool" variable="$usePlaceholders">
            <type>bool</type>
          </tag>
          <tag name="return" line="2053" description="full UPDATE statement" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$usePlaceholders</name>
          <default>true</default>
          <type>bool</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="" line="2090" package="Miner">
        <name>getDeleteStatement</name>
        <full_name>\Miner::getDeleteStatement()</full_name>
        <docblock line="2090">
          <description>Get the full DELETE statement.</description>
          <long-description></long-description>
          <tag name="param" line="2090" description="&lt;p&gt;optional use ? placeholders, default true&lt;/p&gt;" type="bool" variable="$usePlaceholders">
            <type>bool</type>
          </tag>
          <tag name="return" line="2090" description="full DELETE statement" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$usePlaceholders</name>
          <default>true</default>
          <type>bool</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="2128" package="Miner">
        <name>getStatement</name>
        <full_name>\Miner::getStatement()</full_name>
        <docblock line="2128">
          <description>Get the full SQL statement.</description>
          <long-description></long-description>
          <tag name="param" line="2128" description="&lt;p&gt;optional use ? placeholders, default true&lt;/p&gt;" type="bool" variable="$usePlaceholders">
            <type>bool</type>
          </tag>
          <tag name="return" line="2128" description="full SQL statement" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$usePlaceholders</name>
          <default>true</default>
          <type>bool</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="2155" package="Miner">
        <name>getPlaceholderValues</name>
        <full_name>\Miner::getPlaceholderValues()</full_name>
        <docblock line="2155">
          <description>Get all placeholder values (SET, WHERE, and HAVING).</description>
          <long-description></long-description>
          <tag name="return" line="2155" description="all placeholder values" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="2166" package="Miner">
        <name>execute</name>
        <full_name>\Miner::execute()</full_name>
        <docblock line="2166">
          <description>Execute the statement using the PDO database connection.</description>
          <long-description></long-description>
          <tag name="return" line="2166" description="executed statement or false if failed" type="\PDOStatement|false">
            <type link="PDOStatement.html">\PDOStatement</type>
            <type>false</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="" line="2193" package="Miner">
        <name>__toString</name>
        <full_name>\Miner::__toString()</full_name>
        <docblock line="2193">
          <description>Get the full SQL statement without value placeholders.</description>
          <long-description></long-description>
          <tag name="return" line="2193" description="full SQL statement" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source></source>
  </file>
  <package name="Default" full_name="Default"/>
  <package name="Miner" full_name="Miner"/>
  <namespace name="global" full_name="global"/>
  <deprecated count="0"/>
</project>
